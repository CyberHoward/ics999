[config]
# Set this to `false` to run the tasks at workspace root directory and not on the members
default_to_workspace = false
# Set this to `true` to avoid clashes with core commands (e.g. `cargo make publish` vs `cargo publish`)
skip_core_tasks = true

[tasks.fmt]
toolchain = "nightly"
command = "cargo"
args = ["fmt", "--all"]

[tasks.test]
command = "cargo"
args = ["test", "--locked"]

[tasks.e2e]
command = "go"
args = ["test", "./e2e/..."]

[tasks.lint]
toolchain = "nightly"
command = "cargo"
args = ["clippy", "--tests", "--", "-D", "warnings"]

[tasks.build]
command = "cargo"
args = [
  "build",
  "--release",
  "--locked",
  "--target", "wasm32-unknown-unknown",
]

# This task requires the `cargo-udeps` package: https://crates.io/crates/cargo-udeps
[tasks.udeps]
toolchain = "nightly"
command = "cargo"
args = ["udeps"]

# This task requires the `cosmwasm-check` package: https://crates.io/crates/cosmwasm-check
[tasks.check]
script = "cosmwasm-check artifacts/*.wasm"

[tasks.optimize]
script = """
if [[ $(uname -m) =~ "arm64" ]]; then \
docker run --rm -v "$(pwd)":/code \
  --mount type=volume,source="$(basename "$(pwd)")_cache",target=/code/target \
  --mount type=volume,source=registry_cache,target=/usr/local/cargo/registry \
  --platform linux/arm64 \
  cosmwasm/workspace-optimizer-arm64:0.12.12; else
docker run --rm -v "$(pwd)":/code \
  --mount type=volume,source="$(basename "$(pwd)")_cache",target=/code/target \
  --mount type=volume,source=registry_cache,target=/usr/local/cargo/registry \
  --platform linux/amd64 \
  cosmwasm/workspace-optimizer:0.12.12; fi
"""

[tasks.schema]
script = """
contracts=( one-account one-core )
for contract in ${contracts[@]}; do
  cargo run --example schema -p $contract
done
"""

[tasks.publish]
script = """
crates=( one-account one-core one-types )
for crate in ${crates[@]}; do
  cargo publish -p $crate
  echo "ðŸ’¤ sleeping for 30 sec before publishing the next crate..."
  sleep 30
done
"""
